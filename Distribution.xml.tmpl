<?xml version="1.0" encoding="utf-8"?>
<installer-gui-script minSpecVersion="2">
    <title>GPUStack</title>
    <options customize="never" rootVolumeOnly="true" require-scripts="false"/>
    <domains enable_anywhere="false" enable_currentUserHome="false" enable_localSystem="true"/>
    <options hostArchitectures="arm64"/>

    <choices-outline>
        <line choice="gpustackChoice"/>
    </choices-outline>

    <choice id="gpustackChoice" title="GPUStack" description="GPUStack installation package">
        <pkg-ref id="ai.gpustack.pkg"/>
    </choice>

    <pkg-ref id="ai.gpustack.pkg" version="${GIT_VERSION}" auth="Root">${PACKAGE_NAME}</pkg-ref>
    <pkg-ref id="ai.gpustack.pkg">
        <must-close>
            <app id="ai.gpustack.gpustack"/>
        </must-close>
    </pkg-ref>

    <installation-check script="InstallationCheck()"/>
    <script>
<![CDATA[
    function InstallationCheck() {
        var output = system.applications.fromIdentifier('ai.gpustack');
        var output2 = system.applications.fromIdentifier('ai.gpustack.gpustack');
        var merged = [];
        if (Array.isArray(output)) merged = merged.concat(output);
        if (Array.isArray(output2)) merged = merged.concat(output2);
        var found = merged.some(function(item) {
            return item.CFBundleExecutable && 
                item.CFBundleExecutable.split('/').pop() === 'gpustack';
        });
        if (found) {
            my.result.message = "检测到 gpustack 正在后台运行，请通过GPUStack Helper或launchctl停止服务后继续安装。";
            my.result.type = "Fatal";
            return false;
        }
        system.log("Debugger triggered!");
        return true;
    }
]]>
    </script>
</installer-gui-script>
